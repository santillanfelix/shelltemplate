ShellTemplate
An Small Shell Template for start/stop simple projects
=

Developed by
   Andres Aquino <aquino(at)hp.com>

Source Code
   [GitHub]       http://andresaquino.github.com/ShellTemplate
   [GoggleCode]   http://shelltemplate.googlecode.com/svn/trunk/
   [Bugtracker]   http://github.com/andresaquino/shelltemplate/issues

Proposito
   Crear una plantilla para desarrollar aplicaciones que se ejecutan en shell, la necesidad viene
   de homologar la manera en como se desarrollan este tipo de aplicaciones al tener diferentes
   grupos de trabajo; de esta manera, el implementar una plantilla nos permite contextualizar los
   diferentes archivos necesarios y las puestas en produccion deberan de ser (en teoria) mucho mas
   sencillas y ordenadas.

Esquema
   .
   ├── install.sh                      # Instalacion
   ├── backups                         # Directorio de Backups
   │   └── *.bkp
   ├── bin                             # shells de aplicacion
   │   └── myApplication.sh
   ├── conf                            # configuracion (log4j,rc)
   │   ├── log4j.properties
   │   ├── private.key
   │   └── setEnvironment.rc
   ├── libs                            # donde ubicar los jars
   │   └── *.jar
   ├── logs                            # por si no usan soya o monopse
   │   └── *.log
   ├── manual                          # si acaso llegan a ensamblar un man
   │   ├── myApplication.1
   │   └── myApplication.pod
   ├── utils                           # utilerias
   │   ├── decryptMe.sh
   │   ├── encryptMe.sh
   │   ├── libutils.sh
   │   ├── myApplication.check
   │   ├── myApplication.start
   │   └── myApplication.stop
   ├── LICENSE
   ├── README
   └── ROADMAP


De la configuracion
Usar un archivo de configuracion general donde se coloquen los parametros requeridos por la
aplicacion. Este archivo puede referenciarse por una liga desde el home del usuario para poder
ubicar los contextos de ejecucion.

Ejemplo:
 - el directorio de ejecucion se encuentra en:
      /opt/apps/batch/ShellTemplate

 - en el directorio tenemos un archivo con los parametros de configuracion en:
      CompSvcBatchBC.rc
      /opt/apps/batch/ShellTemplate/setEnvironment.rc

 - el contenido del archivo, es el siguiente:
      AP_PATH=/opt/apps/batch/ShellTemplate
      AP_FKEY=ShellTemplate.key
      etc..

 - y referenciarlo de la siguiente manera:
      ln -sf /opt/apps/batch/ShellTemplate/setEnvironment.rc $HOME/.shelltemplaterc

 - de tal manera que lo podriamos referenciar en algun otro shell de la sig manera:
      ...
      echo "Cargando configuracion"
      . ${HOME}/.shelltemplaterc
      ...

La idea de hacer este tipo de configuracion, es usar las rutas por defecto del sistema operativo (en
este caso el $HOME del usuario) para poder cargar los parametros de las aplicaciones y evitar
conflictos por realizar la ejecucion de las mismas al no encontrarse dentro de los directorios de
ejecucion. De esta manera se puede ejecutar el shell desde cualquier ubicacion y estaremos seguros
de que este se ejecutara acorde a nuestros parametros.



# vim: set ts=3 et sw=3 sts=3 si ai tw=100 lbr syntax=txt:
